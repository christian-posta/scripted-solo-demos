{{- define "redis.secretTlsSpec" -}}
{{- if .Values.redis.cert.enabled }}
{{- if not .Values.redis.disabled }}
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: gloo
    gloo: {{.Release.Name}}-redis-tls-secret
  name: {{.Release.Name}}-redis-tls-secret
  namespace: {{ .Release.Namespace }}
type: kubernetes.io/tls 
data:
  tls.crt: {{ .Values.redis.cert.crt }}
  tls.key: {{ .Values.redis.cert.key }}
---
{{- end }}{{/* not .Values.redis.disabled */}}
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: gloo
    gloo: {{.Release.Name}}-redis-ca-cert-secret
  name: {{.Release.Name}}-redis-ca-cert-secret
  namespace: {{ .Release.Namespace }}
type: Opaque 
data:
  {{- if .Values.redis.cert.cacrt }}
  ca.crt: {{ .Values.redis.cert.cacrt }}
  {{- else }}
  ca.crt: {{ .Values.redis.cert.crt }}
  {{- end }}
{{- end }}{{/* .Values.redis.cert.enabled */}}
{{- end }}{{/* define "redis.secretTlsSpec" */}}

{{- $override := dict }}
{{- if .Values.redis.cert.enabled -}}
{{- $override = .Values.redis.cert.kubeResourceOverride }}
{{- end -}}{{/* if .Values.redis.cert.enabled */}}
{{- include "gloo.util.merge" (list $ $override "redis.secretTlsSpec") }}