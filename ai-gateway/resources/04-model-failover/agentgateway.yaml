#Example here
--- 
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: example-gateway
spec:
  gatewayClassName: agentgateway  # ‚Üê Note: agentgateway class
  listeners:
    - name: http
      protocol: HTTP
      port: 80
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: example-route
spec:
  parentRefs:
    - name: example-gateway
  hostnames:
    - "example.com"
  rules:
    - backendRefs:
        - group: gateway.kgateway.dev
          kind: Backend
          name: multipool-priority
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: Backend
metadata:
  name: multipool-priority
spec:
  type: AI
  ai:
    priorityGroups:
    # Priority 0 - Primary providers (highest priority)
    - providers:
      - name: openai
        openai:
          model: "gpt-4o"
          authToken:
            kind: "SecretRef"
            secretRef:
              name: openai-primary-secret
      - name: anthropic
        anthropic:
          model: "claude-3-opus-20240229"
          authToken:
            kind: "Inline"
            inline: "sk-anthropic-primary"
    
    # Priority 1 - Secondary fallback providers
    - providers:
      - name: gemini
        gemini:
          model: "gemini-1.5-flash"
          authToken:
            kind: "SecretRef"
            secretRef:
              name: gemini-fallback-secret
      - name: vertexai
        vertexai:
          model: "gemini-pro"
          projectId: "my-project"
          location: "us-central1"
          apiVersion: "v1"
          publisher: "GOOGLE"
          authToken:
            kind: "Passthrough"
    
    # Priority 2 - Tertiary fallback provider
    - providers:
      - name: bedrock
        bedrock:
          model: "anthropic.claude-3-haiku-20240307-v1:0"
          region: "us-east-1"
          auth:
            type: "Secret"
            secretRef:
              name: aws-bedrock-secret