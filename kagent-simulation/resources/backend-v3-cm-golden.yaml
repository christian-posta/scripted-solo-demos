apiVersion: v1
data:
  index.js: |-
    const express = require('express');
    const mysql = require('mysql2/promise');
    const app = express();

    const pool = mysql.createPool({
      host: process.env.MYSQL_HOST,
      user: process.env.MYSQL_USER,
      password: process.env.MYSQL_PASSWORD,
      database: process.env.MYSQL_DATABASE,
      waitForConnections: true,
    });

    // Initialize database and table
    async function initDB() {
      try {
        const connection = await pool.getConnection();
        await connection.execute('CREATE TABLE IF NOT EXISTS messages (id INTEGER PRIMARY KEY AUTO_INCREMENT, message VARCHAR(255), created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP) ENGINE=InnoDB;');
        await connection.execute("INSERT INTO messages (message) VALUES ('Hello from backend-v3!')");
        connection.release();
      } catch (err) {
        console.error('Database initialization error:', err);
        process.exit(1);
      }
    }

    // Initialize DB on startup
    initDB();
    console.log('Database initialized');

    app.get('/', async (req, res) => {
      try {
        console.log(`Received request: ${req.method} ${req.url}`);
        await initDB();
        const [rows] = await pool.execute('SELECT * FROM messages ORDER BY created_at DESC LIMIT 1');
        res.json({
          service: "backend-v3",
          database: "connected",
          lastMessage: rows[0]
        });
      } catch (err) {
        res.status(500).json({
          service: "backend-v3",
          database: "error",
          error: err.message
        });
      }
    });

    app.listen(8080, () => {
      console.log("backend v3 listening at http://localhost:8080");
    });
kind: ConfigMap
metadata:
  name: backend-v3-code
  namespace: default
