# yaml-language-server: $schema=../../schema/local.json
config:
  # logging:
  #   fields:
  #     add:
  #       request.body: "request.body"
  #       request.headers: "request.headers"
binds:
- port: 3000
  listeners:
  - routes:
    - name: openai
      matches:
      - path:
          pathPrefix: /openai
      backends:
      - ai:
          name: openai
          provider:
            openAI:
              model: gpt-4o
          routes:
            "/v1/chat/completions": completions  # LLM processing
            "*": passthrough                      # Everything else passes through        
      policies:
        urlRewrite:
          path:
            prefix: ""    # This strips the matched /openai prefix
        backendAuth:
          key: ${OPENAI_API_KEY}
        cors:
          allowOrigins: ["*"]
          allowHeaders: ["*"]
        # Global rate limiting for OpenAI route
        remoteRateLimit:
          domain: "agentgateway"
          host: "${RATELIMIT_HOST:-localhost}:8081"
          descriptors:
            - entries:
                - key: "route"
                  value: '"openai"'
              type: "requests"

    - name: anthropic-claude
      matches:
      - path:
          pathPrefix: /anthropic
      backends:
      - ai:
          name: anthropic
          provider:
            anthropic:
              model: claude-3-5-sonnet-20241022
      policies:
        remoteRateLimit:
          domain: "agentgateway"
          host: "${RATELIMIT_HOST:-localhost}:8081"
          descriptors:
            - entries:
                - key: "route"
                  value: '"anthropic"'
              type: "tokens"      
        backendAuth:  # Place auth HERE on the provider
          key: ${ANTHROPIC_API_KEY}          
        requestHeaderModifier:    
          add:
            anthropic-dangerous-direct-browser-access: "true"                      
        cors:
          allowOrigins: ["*"]
          allowHeaders: ["*"]
    - name: gemini
      matches:
      - path:
          pathPrefix: /gemini
      backends:
      - ai:
          name: gemini
          provider:
            gemini:
              model: gemini-2.5-flash-lite
      policies:
        backendAuth:
          key: ${GEMINI_API_KEY}
        cors:
          allowOrigins: ["*"]
          allowHeaders: ["*"]

    - name: bedrock
      matches:
      - path:
          pathPrefix: /bedrock
      backends:
      - ai:
          name: bedrock
          provider:
            bedrock:
              region: us-west-2
              # anthropic.claude-sonnet-4-20250514-v1:0
              # model: arn:aws:bedrock:us-west-2:606469916935:inference-profile/global.anthropic.claude-sonnet-4-20250514-v1:0
              model: global.anthropic.claude-sonnet-4-20250514-v1:0
      policies:
        cors:
          allowOrigins: ["*"]
          allowHeaders: ["*"]
          
    - matches:
      - path:
          exact: /mcp
      backends:
      - mcp:
          targets:
          - name: openapi
            openapi:
              schema:
                file: ${OPEN_API_SCHEMA_PATH:-/app/openapi.json}
              host: petstore.swagger.io:443          
          - name: deepwiki
            mcp:
              host: "mcp.deepwiki.com"
              port: 443
              path: "/mcp"
          - name: microsoft
            mcp:
              host: "learn.microsoft.com"
              port: 443
              path: "/api/mcp"              
          - name: exa-ai
            mcp:
              host: "mcp.exa.ai"
              port: 443
              path: "/mcp"
      policies:
        cors:
          allowOrigins:
          - "*"
          allowHeaders:
          - "*"
          allowMethods:
          - "*"
        backendTLS: {}     
        requestHeaderModifier:
          remove:
          - x-forwarded-for
          - x-forwarded-host
          - x-forwarded-proto

    - matches:
      - path:
          exact: /secure/mcp
      - path:
          exact: /.well-known/oauth-protected-resource/secure/mcp
      - path:
          exact: /.well-known/oauth-authorization-server/secure/mcp
      backends:
      - mcp:
          targets:
          - name: deepwiki
            mcp:
              host: "mcp.deepwiki.com"
              port: 443
              path: "/mcp"
          - name: microsoft
            mcp:
              host: "learn.microsoft.com"
              port: 443
              path: "/api/mcp"
      policies:
        cors:
          allowOrigins:
          - "*"
          allowHeaders:
          - "*"
          allowMethods:
          - "*"
        requestHeaderModifier:
          remove:
          - x-forwarded-for
          - x-forwarded-host
          - x-